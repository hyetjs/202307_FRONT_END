
CSS
(Cascading Styled Sheets)

HTML 문서에서 style 속성을 추가하여 시각적으로 꾸며주는 역할, 디자인 부분을 담당

-----------------------------------------------------------------

CSS 문법

    선택자 (내가 어떤 요소를 꾸밀건지){
        ...CSS 문법 (속성명: 속성값)
    }

    ex)
        p {
            text-align:center;
        }
        => 모든 p 태그의 텍스트를 가운데 정렬해라

-----------------------------------------------------------------

CSS 적용법
1. 내부 스타일링
    HTML 문서의 <head>태그 안에 <style> 요소를 활용하여
    * 작성한 HTML 파일 안 * 에서만 스타일을 적용하는 기법

    ex)
    <html>
        <head>
            <style>
                ...CSS 문법
            </style>
        </head>
        <body>
            ...
        </body>
    </html>

2. 외부 스타일링
    웹 사이트 전체, * 다른 HTML 파일에서도 재사용 * 이 가능하고
    외부에 CSS 파일을 만들어 <link> 요소를 활용하여 HTML 파일과 연결하여 적용하는 기법

    ex)
    <head>
        <link href="css 파일의 경로" rel="styledsheet"/>
    </head>

3. 인라인 스타일링 (우선 순위가 높음)
    HTML 요소안에 직접 style 속성을 정의하여 적용, * 가장 우선 순위 * 가 높습니다.
    우선 순위라는 것은 겹치는 CSS 적용의 순서

    ex)
        <p style="text-align:center; color:blue;"></p>

-----------------------------------------------------------------

* 외부 스타일링을 가장 많이 쓰며 -> 재사용성
내부 스타일링을 기피 코드가 길어지기 때문에 가독성이 좋지 않음 -> 유지 보수에 어려움
인라인은 우선 순위나 javaScript를 이용해야하기에 활용하는 경우가 있다면 -> 실무

스파게티 코드 (SI식 코드)

-----------------------------------------------------------------

* 요소의 id와 class 속성에 대해서 

    <요소명 속성="속성값" />
    <input type="text" />

    <div id="menu"></div>
    <div class="menu-item"></div>

    * 왜 id와 class를 주어야할까?
        - 내가 어떤 특정한 요소 혹은 그룹을 선택하여 자바스크립트나 CSS를 적용하기 위해
          선택하기 쉽도록 요소에 이름을 붙여주는 것

    id 속성은 한 html 파일안에 반드시 하나만 존재하고 있어야하며, class는 복수의 요소에 동일한 값을 지정할 수 있으며
    중복된 css 속성을 줄이기 위해(한번에 적용하기 위해) 사용

    => 내가 선택한 요소를 지정할 수 있어야하기 때문에 id는 중복되지 않는 고유 요소, class는 복수 요소 선택

-----------------------------------------------------------------

* 선택자

    1) 전체 선택자
        스타일을 모든 요소에 적용, 단 전체 선택자는 모든 선택자보다 우선 순위가 낮습니다
        * {
            ...CSS 문법
        }
        
    2) 태그 선택자
        특정 요소를 선택하여 선택한 모든 요소에 스타일을 적용법
        ex)
            p {
                ...CSS 문법
            }

-----------------------------------------------------------------

    3) id 선택자
        웹 문서 안에 "특정한 고유 id 속성" 을 가진 요소를 선택하여 스타일을 적용
        ex)
            #아이디명 {
                ...CSS 문법
            }

    4) * class 선택자
        웹 문서 안에 "특정한 class 속성을 가진 집단" 요소를 선택하여 스타일을 적용
        ex)
            .클래스명{
                ...CSS 문법
            }

    심화 
        가정
        p, div, span => class 명이 big-font
        근데 여러분은 여기서 big-font라는 클래스를 가진 p태그만 선택
        ex) 
            p.big-font{ ---> big-font를 가지고 있는 div, span은 선택되지 않습니다.
                ...CSS 문법
            }

        p.클래스명{ // p 요소 중에 해당 클래스를 가진 요소만 선택 (띄어쓰기 없음)
            ...CSS 문법
        }

-----------------------------------------------------------------

    Emmet (축약)

        div#menu => <div id="menu"></div>

-----------------------------------------------------------------

    5) 그룹 선택자
        중복되는 CSS를 줄이기위하여 class를 줄 수도 있지만 class 없이 특정 요소를 같이 선택하여
        css부여가 가능

        ex)
            p(선택자) {
                color: red;
            }

            div{
                color: red; ---> color: red; ---> p태그와 중복
            }

            p, div, ... {
                color: red;
            }

-----------------------------------------------------------------

    * CSS의 가족

        자손 : 하위의 모든 요소
        조상 : 상위의 모든 요소
        부모 : 바로 위의 요소, 최상위 부모 요소(가장 높은 부모 요소), 가장 가까운 부모
        자식 : 바로 아래 요소
        형제 : 이웃한 요소
        손자 : 자식의 자식 요소

        <div> --- 부모,조상
            <div> --- 기준
                <div> --- 자식,자손
                    <div></div> --- 자손,손자
                </div>
                <div></div> --- 자식,자손
            </div>
            <div></div> --- 형제
            <div></div> --- 형제
        </div>

-----------------------------------------------------------------

    6) 자식 선택자 (' > ')
        부모선택자 > 자식선택자 {
            ...CSS 문법
        }

        ex)
            p > #menu {
                color: red;
            }
            // p태그의 바로 아래 요소 중 아이디가 menu인 것을 선택

    7) 자손 선택자 (' ')
        조상요소선택자 자손선택자 {
            ...CSS 문법
        }

        ex)
            p div {
                color: red;
            }
            // p태그 이하 모든 div 선택

-----------------------------------------------------------------

    .main-banner > .menu-item div > p a {
        ...
    }
       
    => class명이 main-banner인 것들 중 바로 아래 자식 중 menu-item class를 가진 요소 이하
       모든 div의 바로 아래 자식인 p 태그 이하 모든 a

-----------------------------------------------------------------

    8) 형제 선택자
    
-----------------------------------------------------------------




    9) 속성 선택자
    10) 가상 클래스 선택자
    11) 가상 요소 선택자