
1. hookstodo 마무리
    - 중첩 객체 state의 변화를 변경하기 위해선?
        (객체 안의 객체)
    - 객체의 state를 변경하기 위해선?
        (깊은 복사, 참조값)

2. 전역 상태 관리
    - useReducer
    - useContext

3. checkList를 꼭 확인해볼 것

오늘 공부한 것

1. forwardRef
2. onSubmit
3. custom hook
* 4.그냥 수업을 따라오고 있는지 아닌지
5. utils, hooks render

-- 내일 --
6. todo CRUD (map, find, filter)
* state의 불변성

7. 라이브러리
8. 전역 상태 관리

-----------------------------------------

checkList

1. 나는 컴포넌트에 ref를 props 전달하여 요소에 접근할 수 있는가
2. 나는 staet를 사용하지 않고 input 요소의 value를 가지고올 수 있는가
3. 나는 state의 불변성에 대해서 인지하고 객체를 활용한 state의 변화를 시킬 수 있는가
4. 나는 custom hook이 무엇이고 언제 사용하는지 알고 있는가
5. 나는 불필요한 state를 인지하고 이를 제거하여 가장 작은 규모의 state를 유지할 수 있는가

-----------------------------------------

CRUD

Create
- state의 불변성
ex) [newTodo, ...perv]

Read
- map을 사용하였을 때 리엑트의 렌더트리에서 겹치지 않는 고유한 key값을 부여해야
- react는 이를 혼동하지 않고 각각의 map으로 뿌려진 컴포넌트의 state 변화를 인지
- 고유한 key 
ex) <OneTodo key={todo.id} />

Update
- side effect -> 배열을 find해서 찾으면 객체(array) 속에 다른 객체(todo)의 주소값이 있기 때문에
- 해당 객체의 주소를 변경하면 배열은 이를 인지하지 못한다. 따라서 findIndex (배열의 요소가 객체일 때)
ex) hadleEditTodo = (id) => findIndex()

Delete
- filter, state의 불변성과 filter의 반환 값
ex) handleDeleteTodo = (id) => filter


** Props drilling

-----------------------------------------

